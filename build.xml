<?xml version="1.0" encoding="UTF-8"?>
<project name="distributedalgorithms" default="all">
  
  
  <property file="build.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="700m"/>
  <patternset id="ignored.files">
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/*.rbc/**"/>
    <exclude name="**/*.yarb/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/CVS/**"/>
    <exclude name="**/RCS/**"/>
    <exclude name="**/SCCS/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/rcs/**"/>
    <exclude name="**/vssver.scc/**"/>
    <exclude name="**/vssver2.scc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.war"/>
    <include name="*.swc"/>
    <include name="*.apk"/>
    <include name="*.zip"/>
    <include name="*.ear"/>
    <include name="*.egg"/>
    <include name="*.ane"/>
    <include name="*.jar"/>
  </patternset>
  <patternset id="compiler.resources">
    <exclude name="**/?*.java"/>
    <exclude name="**/?*.form"/>
    <exclude name="**/?*.class"/>
    <exclude name="**/?*.groovy"/>
    <exclude name="**/?*.scala"/>
    <exclude name="**/?*.flex"/>
    <exclude name="**/?*.kt"/>
    <exclude name="**/?*.clj"/>
    <exclude name="**/?*.aj"/>
  </patternset>
  
  <!-- JDK definitions -->
  
  <property name="jdk.bin.1.7" value="${jdk.home.1.7}/bin"/>
  <path id="jdk.classpath.1.7">
    <fileset dir="${jdk.home.1.7}">
      <include name="jre/lib/charsets.jar"/>
      <include name="jre/lib/deploy.jar"/>
      <include name="jre/lib/ext/dnsns.jar"/>
      <include name="jre/lib/ext/localedata.jar"/>
      <include name="jre/lib/ext/sunec.jar"/>
      <include name="jre/lib/ext/sunjce_provider.jar"/>
      <include name="jre/lib/ext/sunpkcs11.jar"/>
      <include name="jre/lib/ext/zipfs.jar"/>
      <include name="jre/lib/htmlconverter.jar"/>
      <include name="jre/lib/javaws.jar"/>
      <include name="jre/lib/jce.jar"/>
      <include name="jre/lib/jfr.jar"/>
      <include name="jre/lib/jfxrt.jar"/>
      <include name="jre/lib/jsse.jar"/>
      <include name="jre/lib/management-agent.jar"/>
      <include name="jre/lib/plugin.jar"/>
      <include name="jre/lib/resources.jar"/>
      <include name="jre/lib/rt.jar"/>
      <include name="lib/ant-javafx.jar"/>
      <include name="lib/dt.jar"/>
      <include name="lib/javafx-doclet.jar"/>
      <include name="lib/javafx-mx.jar"/>
      <include name="lib/jconsole.jar"/>
      <include name="lib/sa-jdi.jar"/>
      <include name="lib/tools.jar"/>
    </fileset>
  </path>
  
  <property name="project.jdk.home" value="${jdk.home.1.7}"/>
  <property name="project.jdk.bin" value="${jdk.bin.1.7}"/>
  <property name="project.jdk.classpath" value="jdk.classpath.1.7"/>
  
  
  <!-- Project Libraries -->
  
  <path id="library.maven:_com.sun.xml.bind:jaxb-impl:2.2.6.classpath">
    <pathelement location="${path.variable.maven_repository}/com/sun/xml/bind/jaxb-impl/2.2.6/jaxb-impl-2.2.6.jar"/>
  </path>
  
  <path id="library.maven:_com.typesafe.akka:akka-actor_2.11:2.4.7.classpath">
    <pathelement location="${path.variable.maven_repository}/com/typesafe/akka/akka-actor_2.11/2.4.7/akka-actor_2.11-2.4.7.jar"/>
  </path>
  
  <path id="library.maven:_com.typesafe.akka:akka-agent_2.11:2.4.7.classpath">
    <pathelement location="${path.variable.maven_repository}/com/typesafe/akka/akka-agent_2.11/2.4.7/akka-agent_2.11-2.4.7.jar"/>
  </path>
  
  <path id="library.maven:_com.typesafe.akka:akka-camel_2.11:2.4.7.classpath">
    <pathelement location="${path.variable.maven_repository}/com/typesafe/akka/akka-camel_2.11/2.4.7/akka-camel_2.11-2.4.7.jar"/>
  </path>
  
  <path id="library.maven:_com.typesafe.akka:akka-slf4j_2.11:2.4.8.classpath">
    <pathelement location="${path.variable.maven_repository}/com/typesafe/akka/akka-slf4j_2.11/2.4.8/akka-slf4j_2.11-2.4.8.jar"/>
  </path>
  
  <path id="library.maven:_com.typesafe:config:1.3.0.classpath">
    <pathelement location="${path.variable.maven_repository}/com/typesafe/config/1.3.0/config-1.3.0.jar"/>
  </path>
  
  <path id="library.maven:_org.apache.camel:camel-core:2.13.4.classpath">
    <pathelement location="${path.variable.maven_repository}/org/apache/camel/camel-core/2.13.4/camel-core-2.13.4.jar"/>
  </path>
  
  <path id="library.maven:_org.jgrapht:jgrapht-core:0.9.2.classpath">
    <pathelement location="${path.variable.maven_repository}/org/jgrapht/jgrapht-core/0.9.2/jgrapht-core-0.9.2.jar"/>
  </path>
  
  <path id="library.maven:_org.scala-lang.modules:scala-java8-compat_2.11:0.7.0.classpath">
    <pathelement location="${path.variable.maven_repository}/org/scala-lang/modules/scala-java8-compat_2.11/0.7.0/scala-java8-compat_2.11-0.7.0.jar"/>
  </path>
  
  <path id="library.maven:_org.scala-lang:scala-library:2.11.8.classpath">
    <pathelement location="${path.variable.maven_repository}/org/scala-lang/scala-library/2.11.8/scala-library-2.11.8.jar"/>
  </path>
  
  <path id="library.maven:_org.scala-stm:scala-stm_2.11:0.7.classpath">
    <pathelement location="${path.variable.maven_repository}/org/scala-stm/scala-stm_2.11/0.7/scala-stm_2.11-0.7.jar"/>
  </path>
  
  <path id="library.maven:_org.slf4j:slf4j-api:1.7.16.classpath">
    <pathelement location="${path.variable.maven_repository}/org/slf4j/slf4j-api/1.7.16/slf4j-api-1.7.16.jar"/>
  </path>
  <!-- Register Custom Compiler Taskdefs -->
  <property name="javac2.home" value="${idea.home}/lib"/>
  <path id="javac2.classpath">
    <pathelement location="${javac2.home}/javac2.jar"/>
    <pathelement location="${javac2.home}/jdom.jar"/>
    <pathelement location="${javac2.home}/asm-all.jar"/>
    <pathelement location="${javac2.home}/jgoodies-forms.jar"/>
  </path>
  <target name="register.custom.compilers">
    <taskdef name="javac2" classname="com.intellij.ant.Javac2" classpathref="javac2.classpath"/>
    <taskdef name="instrumentIdeaExtensions" classname="com.intellij.ant.InstrumentIdeaExtensions" classpathref="javac2.classpath"/>
  </target>
  
  <!-- Modules -->
  
  
  <!-- Module com.examples.robertozen -->
  
  <dirname property="module.com.examples.robertozen.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.com.examples.robertozen" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.com.examples.robertozen" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.com.examples.robertozen" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.com.examples.robertozen" value="-encoding UTF-8 -source 1.5 -target 1.5 ${compiler.args}"/>
  
  <property name="com.examples.robertozen.output.dir" value="${module.com.examples.robertozen.basedir}/target/classes"/>
  <property name="com.examples.robertozen.testoutput.dir" value="${module.com.examples.robertozen.basedir}/target/test-classes"/>
  
  <path id="com.examples.robertozen.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="com.examples.robertozen.module.production.classpath">
    <path refid="${module.jdk.classpath.com.examples.robertozen}"/>
    <path refid="library.maven:_com.typesafe.akka:akka-actor_2.11:2.4.7.classpath"/>
    <path refid="library.maven:_org.scala-lang:scala-library:2.11.8.classpath"/>
    <path refid="library.maven:_com.typesafe:config:1.3.0.classpath"/>
    <path refid="library.maven:_org.scala-lang.modules:scala-java8-compat_2.11:0.7.0.classpath"/>
    <path refid="library.maven:_com.typesafe.akka:akka-agent_2.11:2.4.7.classpath"/>
    <path refid="library.maven:_org.scala-stm:scala-stm_2.11:0.7.classpath"/>
    <path refid="library.maven:_com.typesafe.akka:akka-camel_2.11:2.4.7.classpath"/>
    <path refid="library.maven:_org.apache.camel:camel-core:2.13.4.classpath"/>
    <path refid="library.maven:_com.sun.xml.bind:jaxb-impl:2.2.6.classpath"/>
    <path refid="library.maven:_org.jgrapht:jgrapht-core:0.9.2.classpath"/>
    <path refid="library.maven:_com.typesafe.akka:akka-slf4j_2.11:2.4.8.classpath"/>
    <path refid="library.maven:_org.slf4j:slf4j-api:1.7.16.classpath"/>
    <pathelement location="${basedir}/lib/mxparser.jar"/>
  </path>
  
  <path id="com.examples.robertozen.runtime.production.module.classpath">
    <pathelement location="${com.examples.robertozen.output.dir}"/>
    <path refid="library.maven:_com.typesafe.akka:akka-actor_2.11:2.4.7.classpath"/>
    <path refid="library.maven:_org.scala-lang:scala-library:2.11.8.classpath"/>
    <path refid="library.maven:_com.typesafe:config:1.3.0.classpath"/>
    <path refid="library.maven:_org.scala-lang.modules:scala-java8-compat_2.11:0.7.0.classpath"/>
    <path refid="library.maven:_com.typesafe.akka:akka-agent_2.11:2.4.7.classpath"/>
    <path refid="library.maven:_org.scala-stm:scala-stm_2.11:0.7.classpath"/>
    <path refid="library.maven:_com.typesafe.akka:akka-camel_2.11:2.4.7.classpath"/>
    <path refid="library.maven:_org.apache.camel:camel-core:2.13.4.classpath"/>
    <path refid="library.maven:_com.sun.xml.bind:jaxb-impl:2.2.6.classpath"/>
    <path refid="library.maven:_org.jgrapht:jgrapht-core:0.9.2.classpath"/>
    <path refid="library.maven:_com.typesafe.akka:akka-slf4j_2.11:2.4.8.classpath"/>
    <path refid="library.maven:_org.slf4j:slf4j-api:1.7.16.classpath"/>
    <pathelement location="${basedir}/lib/mxparser.jar"/>
  </path>
  
  <path id="com.examples.robertozen.module.classpath">
    <path refid="${module.jdk.classpath.com.examples.robertozen}"/>
    <pathelement location="${com.examples.robertozen.output.dir}"/>
    <path refid="library.maven:_com.typesafe.akka:akka-actor_2.11:2.4.7.classpath"/>
    <path refid="library.maven:_org.scala-lang:scala-library:2.11.8.classpath"/>
    <path refid="library.maven:_com.typesafe:config:1.3.0.classpath"/>
    <path refid="library.maven:_org.scala-lang.modules:scala-java8-compat_2.11:0.7.0.classpath"/>
    <path refid="library.maven:_com.typesafe.akka:akka-agent_2.11:2.4.7.classpath"/>
    <path refid="library.maven:_org.scala-stm:scala-stm_2.11:0.7.classpath"/>
    <path refid="library.maven:_com.typesafe.akka:akka-camel_2.11:2.4.7.classpath"/>
    <path refid="library.maven:_org.apache.camel:camel-core:2.13.4.classpath"/>
    <path refid="library.maven:_com.sun.xml.bind:jaxb-impl:2.2.6.classpath"/>
    <path refid="library.maven:_org.jgrapht:jgrapht-core:0.9.2.classpath"/>
    <path refid="library.maven:_com.typesafe.akka:akka-slf4j_2.11:2.4.8.classpath"/>
    <path refid="library.maven:_org.slf4j:slf4j-api:1.7.16.classpath"/>
    <pathelement location="${basedir}/lib/mxparser.jar"/>
  </path>
  
  <path id="com.examples.robertozen.runtime.module.classpath">
    <pathelement location="${com.examples.robertozen.testoutput.dir}"/>
    <pathelement location="${com.examples.robertozen.output.dir}"/>
    <path refid="library.maven:_com.typesafe.akka:akka-actor_2.11:2.4.7.classpath"/>
    <path refid="library.maven:_org.scala-lang:scala-library:2.11.8.classpath"/>
    <path refid="library.maven:_com.typesafe:config:1.3.0.classpath"/>
    <path refid="library.maven:_org.scala-lang.modules:scala-java8-compat_2.11:0.7.0.classpath"/>
    <path refid="library.maven:_com.typesafe.akka:akka-agent_2.11:2.4.7.classpath"/>
    <path refid="library.maven:_org.scala-stm:scala-stm_2.11:0.7.classpath"/>
    <path refid="library.maven:_com.typesafe.akka:akka-camel_2.11:2.4.7.classpath"/>
    <path refid="library.maven:_org.apache.camel:camel-core:2.13.4.classpath"/>
    <path refid="library.maven:_com.sun.xml.bind:jaxb-impl:2.2.6.classpath"/>
    <path refid="library.maven:_org.jgrapht:jgrapht-core:0.9.2.classpath"/>
    <path refid="library.maven:_com.typesafe.akka:akka-slf4j_2.11:2.4.8.classpath"/>
    <path refid="library.maven:_org.slf4j:slf4j-api:1.7.16.classpath"/>
    <pathelement location="${basedir}/lib/mxparser.jar"/>
  </path>
  
  
  <patternset id="excluded.from.module.com.examples.robertozen">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.com.examples.robertozen">
    <patternset refid="excluded.from.module.com.examples.robertozen"/>
  </patternset>
  
  <path id="com.examples.robertozen.module.sourcepath">
    <dirset dir="${module.com.examples.robertozen.basedir}">
      <include name="src/main/java"/>
      <include name="src/main/resources"/>
    </dirset>
  </path>
  
  <path id="com.examples.robertozen.module.test.sourcepath">
    <dirset dir="${module.com.examples.robertozen.basedir}">
      <include name="src/test/java"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.com.examples.robertozen" depends="compile.module.com.examples.robertozen.production,compile.module.com.examples.robertozen.tests" description="Compile module com.examples.robertozen"/>
  
  <target name="compile.module.com.examples.robertozen.production" depends="register.custom.compilers" description="Compile module com.examples.robertozen; production classes">
    <mkdir dir="${com.examples.robertozen.output.dir}"/>
    <javac2 destdir="${com.examples.robertozen.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.com.examples.robertozen}/javac">
      <compilerarg line="${compiler.args.com.examples.robertozen}"/>
      <bootclasspath refid="com.examples.robertozen.module.bootclasspath"/>
      <classpath refid="com.examples.robertozen.module.production.classpath"/>
      <src refid="com.examples.robertozen.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.com.examples.robertozen"/>
    </javac2>
    
    <copy todir="${com.examples.robertozen.output.dir}">
      <fileset dir="${module.com.examples.robertozen.basedir}/src/main/java">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.com.examples.robertozen.basedir}/src/main/resources">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.com.examples.robertozen.tests" depends="register.custom.compilers,compile.module.com.examples.robertozen.production" description="compile module com.examples.robertozen; test classes" unless="skip.tests">
    <mkdir dir="${com.examples.robertozen.testoutput.dir}"/>
    <javac2 destdir="${com.examples.robertozen.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.com.examples.robertozen}/javac">
      <compilerarg line="${compiler.args.com.examples.robertozen}"/>
      <bootclasspath refid="com.examples.robertozen.module.bootclasspath"/>
      <classpath refid="com.examples.robertozen.module.classpath"/>
      <src refid="com.examples.robertozen.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.com.examples.robertozen"/>
    </javac2>
    
    <copy todir="${com.examples.robertozen.testoutput.dir}">
      <fileset dir="${module.com.examples.robertozen.basedir}/src/test/java">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.com.examples.robertozen" description="cleanup module">
    <delete dir="${com.examples.robertozen.output.dir}"/>
    <delete dir="${com.examples.robertozen.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.com.examples.robertozen" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.com.examples.robertozen" description="build all modules"/>
  
  <target name="all" depends="build.modules" description="build all"/>
</project>